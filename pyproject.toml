[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[project]
name = "jimmy"
version = "0.1.0"
dynamic = ["dependencies"]
description = "Convert your notes to Markdown"
authors = [
    {name = "Marph", email = "martin.d@andix.de"},
]
readme = "readme.md"
license = "GPL-3.0-only"
license-files = ["license"]
keywords = ["markdown", "notes", "joplin", "obsidian"]
classifiers = [
    "Environment :: Console",
    "Framework :: MkDocs",
    "Framework :: Pydantic",
    "Framework :: Pytest",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Email",
    "Topic :: Documentation",
    "Topic :: File Formats",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: reStructuredText",
]
[project.scripts]
jimmy = "jimmy.jimmy_cli:main"
[project.urls]
Homepage = "https://github.com/marph91/jimmy"
Documentation = "https://marph91.github.io/jimmy"
Download = "https://github.com/marph91/jimmy/releases"
Repository = "https://github.com/marph91/jimmy"
Issues = "https://github.com/marph91/jimmy/issues"

[tool.hatch.build.targets.sdist]
exclude = [
  "/docs",
]
[tool.hatch.build.targets.wheel]
packages = ["jimmy"]

[tool.hatch.metadata]
allow-direct-references = true
[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements/requirements.txt"]

[tool.mypy]
# almost like strict, but leave out some too strict checks
warn_unused_configs = true
# disallow_any_generics = true
disallow_subclassing_any = true
# disallow_untyped_calls = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
# warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true
# for python-markdown
disable_error_code = "attr-defined"
[[tool.mypy.overrides]]
module = [
    "anyblock_exporter",
    "frontmatter",
    "puremagic",
    "pypandoc",
    "pytodotxt",
    "stage_left",
    "stage_left.types"
]
ignore_missing_imports = true

[tool.pylint]
disable = [
    # f-strings are convenient. Don't care about the performance (yet).
    "logging-fstring-interpolation",
    "missing-function-docstring",
    "missing-class-docstring",
    # needed for flexible base class
    "arguments-differ",
    # too many
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-statements",
]
min-similarity-lines = 10
notes = []  # don't show todos

[tool.ruff]
# Set the maximum line length to 88.
line-length = 88
# Include pyinstaller spec files.
extend-include = ["*.spec"]
[tool.ruff.lint]
# all rules: https://docs.astral.sh/ruff/rules/
select = [
    "B",    # flake8-bugbear
    "E",    # pycodestyle errors
    "F",    # Pyflakes
    # "I",  # isort
    "N",    # pep8-naming
    # "PL",   # Pylint
    # "RUF",  # ruff
    # "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]

# use pytest to include unittests and doctests:
# https://stackoverflow.com/questions/43463273/python-m-doctest-ignores-files-with-same-names-in-different-directories
[tool.pytest.ini_options]
addopts = "--log-level DEBUG --verbose --doctest-modules"
