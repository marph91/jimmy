{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to Jimmy's documentation!","text":"<p>Jimmy is a tool to convert your notes from different formats to Markdown.</p>"},{"location":"index.html#installation","title":"Installation","text":"<p>Download Jimmy here: Linux | Windows | macOS</p>"},{"location":"index.html#use-cases","title":"Use Cases","text":"<ul> <li>Migrate between note apps</li> <li>Save your notes in a future-proof, human-readable format</li> <li>Prepare your notes for processing in a LLM</li> </ul>"},{"location":"index.html#demo","title":"Demo","text":"<p>Example commands for the Linux CLI app:</p> <pre><code># convert a single file supported by pandoc\njimmy-cli-linux libre_office_document.odt\n\n# convert all files in a folder\njimmy-cli-linux path/to/folder\n\n# convert a Google Keep export\njimmy-cli-linux takeout-20240401T160516Z-001.zip --format google_keep\n</code></pre> <p>For a video, check the Github readme.</p>"},{"location":"index.html#features","title":"Features","text":"<ul> <li>\u2705 Several supported input formats</li> <li>\u2705 Markdown + Front matter output<ul> <li>Compatible with any text editor</li> <li>Can be imported to Joplin/Obsidian/...</li> <li>Preserves resources, tags and note links when possible</li> </ul> </li> <li>\u2705 Offline</li> <li>\u2705 Open Source</li> <li>\u2705 Cross-platform</li> <li>\u2705 Standalone (no Docker, Python or Node.js installation required)</li> <li>\u274e No AI</li> </ul> <p>If there is an issue at download or execution, please take a look at the step-by-step instructions.</p>"},{"location":"index.html#supported-apps","title":"Supported Apps","text":"<p>Export data from your app and convert it to Markdown. For details, click on the links.</p> <p><code>A</code> Anki Anytype <code>B</code> Bear <code>C</code> Cacher CherryTree Clipto ColorNote <code>D</code> Day One Drafts Dynalist <code>E</code> Evernote <code>F</code> Facebook FuseBase / Nimbus Note <code>G</code> Google Docs Google Keep <code>J</code> Joplin jrnl <code>N</code> Notion <code>O</code> Obsidian <code>Q</code> QOwnNotes <code>R</code> RedNotebook Roam Research <code>S</code> Simplenote Standard Notes Synology Note Station <code>T</code> Telegram Textbundle / Textpack Tiddlywiki Tomboy-ng / Gnote Turtl <code>W</code> Wordpress <code>Z</code> Zettelkasten Zim Zoho Notebook</p>"},{"location":"index.html#supported-formats","title":"Supported Formats","text":"<p>Convert a single file or a folder (recursively). Files of these formats will be converted to Markdown. The formats can be mixed. For example, you can convert a folder with two Asciidoc files and one DOCX file. The conversion result will be a folder with three Markdown files and the corresponding attachments.</p> <p><code>A</code> Asciidoc <code>C</code> CSV <code>D</code> DocBook DOCX <code>E</code> EML EPUB <code>F</code> Fountain <code>H</code> HTML <code>J</code> Jupyter Notebook <code>M</code> Markdown MediaWiki <code>O</code> ODT OPML <code>R</code> reStructuredText RTF <code>T</code> txt2tags</p>"},{"location":"index.html#general-usage","title":"General Usage","text":"<pre><code>flowchart LR\n    A[App 1] --&gt;|Backup| M\n    B[App 2] --&gt;|Export| M\n    C[...] --&gt; M\n    D[Filesystem] --&gt; M\n    M(ZIP archive/JSON/Folder) --&gt; N\n    N{Jimmy} --&gt; O(Markdown + Frontmatter)\n    O --&gt;|Import| P[Joplin]\n    O --&gt;|Import| Q[Obsidian]\n    O --&gt; R[...]\n    O --&gt; S[Editor, e. g. VSCode]</code></pre> <ol> <li>Export/backup notes from your note application</li> <li>Run <code>jimmy</code>, which converts your notes to Markdown</li> <li>Import the result to Joplin/Obsidian or even use any editor like VSCode</li> </ol>"},{"location":"index.html#step-by-step-instructions","title":"Step-by-step Instructions","text":"Step Linux / macOS Example Windows Example Export your notes to your download folder <code>/home/user/Downloads/Export.zip</code> <code>C:\\Users\\user\\Downloads\\Export.zip</code> Download Jimmy to your download folder [1] <code>/home/user/Downloads/jimmy-cli-linux</code> <code>C:\\Users\\user\\Downloads\\jimmy-cli-windows.exe</code> Open a terminal Linux / macOS instructions Windows instructions Change to the download folder <code>cd /home/user/Downloads/</code> <code>cd C:\\Users\\user\\Downloads\\</code> Make Jimmy executable <code>chmod +x jimmy-cli-linux</code> - Do the conversion [2] [3] [4] <code>./jimmy-cli-linux Export.zip --format notion</code> <code>jimmy-cli-windows.exe Export.zip --format notion</code> Check the output folder <code>/home/user/Downloads/20250226T200101Z - Jimmy Import from notion</code> <code>C:\\Users\\user\\Downloads\\20250226T200101Z - Jimmy Import from notion</code> <p>[1] On Windows: If Jimmy is flagged as virus, please report the false positive to your antivirus vendor. As workaround, you can try an older version of Jimmy.</p> <p>[2] On macOS: If there is the error message <code>zsh: bad CPU type in executable</code>, please use this executable. It is supported by Intel chips.</p> <p>[3] On macOS: If there is the error message <code>\"jimmy-cli-darwin-arm64\" cannot be opened because the developer cannot be verified</code>, please authorize Jimmy at\u00a0<code>System Settings \u2192 Privacy &amp; Security \u2192 Security \u2192 Open Anyway</code>. See also the Apple support guide.</p> <p>[4] On Linux: If there is the error message <code>version `GLIBC_2.35' not found</code>, you can either try update your OS or use an older Jimmy build. The glibc version is usually upwards compatible:</p> Jimmy Version Glibc Version From v0.1.0 2.35 v0.0.56 2.31"},{"location":"import_instructions.html","title":"Import Instructions","text":"<p>This page describes how you can import the notes that you just converted to Markdown.</p>"},{"location":"import_instructions.html#any-editor","title":"Any Editor","text":"<p>Open the root folder in the editor.</p>"},{"location":"import_instructions.html#joplin","title":"Joplin","text":"<p>Markdown files can be imported to Joplin as described on the website:</p> <ol> <li>In Joplin, go to <code>File \u2192 Import</code> and choose:<ul> <li><code>MD - Markdown (Directory)</code> if you converted without front matter. This is the default.</li> <li><code>MD - Markdown + Front Matter (Directory)</code> if you converted with front matter. You can add front matter by using the <code>--frontmatter joplin</code> argument.</li> </ul> </li> <li>Select the root folder.</li> </ol>"},{"location":"import_instructions.html#logseq","title":"Logseq","text":"<p>Since Logseq doesn't support folders, this will only work with \"flat exports\". I. e. where all Markdown files are in the root folder. It works for example with Google Keep.</p> <ol> <li>Use the arguments <code>--output-folder \"pages\" --global-resource-folder \"../assets\"</code>. This exports the Markdown notes to the <code>pages</code> folder and the resources next to it in a <code>assets</code> folder. Just like it is in Logseq. A complete command could look like <code>jimmy-cli-linux takeout-20240401T160516Z-001.zip --format google_keep --output-folder \"pages\" --global-resource-folder \"../assets\"</code></li> <li>Either copy the folders to your Logseq graph or open them as new graph to check how it looks.</li> </ol>"},{"location":"import_instructions.html#notion","title":"Notion","text":"<p>Markdown files can be imported to Notion as described on the website. This will only import Markdown notes, though. Importing resources seems to be not supported.</p>"},{"location":"import_instructions.html#notesnook","title":"Notesnook","text":"<ol> <li>Go to the Notesnook Importer website.</li> <li>Select <code>Markdown</code></li> <li>Follow the instructions on the page.</li> </ol> <p>Note</p> <p>Attachments are only allowed if you have a pro account. See https://notesnook.com/pricing/.</p>"},{"location":"import_instructions.html#obsidian","title":"Obsidian","text":"<p>Markdown files can be imported to Obsidian as described on the website:</p> <ul> <li>Copy the root folder to you vault or open it as a new vault.</li> <li>Add metadata in the front matter by using the <code>--frontmatter obsidian</code> argument.</li> </ul>"},{"location":"import_instructions.html#qownnotes","title":"QOwnNotes","text":"<ol> <li>Use the arguments <code>--local-resource-folder attachments --local-image-folder media</code>. This is not required, but aligns with the internal structure of QOwnNotes.</li> <li>Copy the root folder to your note folder or open it as a new note folder.</li> <li>If you have subfolders, enable <code>Note \u2192 Settings \u2192 Use note subfolders</code>.</li> <li>If you want to convert tags:<ol> <li>Use the argument <code>--frontmatter qownnotes</code></li> <li>Detect the front matter tags by installing the epsilon-notes-tags or yaml-nested-tags plugin.</li> </ol> </li> </ol> <p>A complete command could look like <code>jimmy-cli-linux takeout.zip --format google_keep --frontmatter qownnotes --local-resource-folder attachments --local-image-folder media</code>.</p>"},{"location":"import_instructions.html#siyuan","title":"SiYuan","text":"<p>Note</p> <p>Markdown folder import is supported in the desktop app only.</p> <ol> <li>Create a new notebook.</li> <li>Right click \u2192 <code>Import \u2192 Markdown Folder</code></li> <li>Select the root folder.</li> </ol>"},{"location":"import_instructions.html#upnote","title":"UpNote","text":"<p>Import from Markdown will most likely work as described on the website. The feature is behind a paywall, so I couldn't test it. Be aware that export to Markdown is behind a paywall, too!</p>"},{"location":"import_instructions.html#vnote","title":"VNote","text":"<p>Choose \"Import Folder\" as described in the documentation.</p>"},{"location":"additional_features/filters.html","title":"Filters","text":"<p>There are some simple filters to select which data to convert. For more complex filtering, a separate plugin or script should be used.</p>"},{"location":"additional_features/filters.html#available-filters","title":"Available Filters","text":"<p>All filters can be used with wildcard. The filters are case-sensitive.</p> <ul> <li>Exclude or include specific notes (<code>--exclude-notes</code>, <code>--include-notes</code>)</li> <li>Exclude or include notes with specific tags (<code>--exclude-notes-with-tags</code>, <code>--include-notes-with-tags</code>)</li> <li>Exclude or include the tags themselves (<code>--exclude-tags</code>, <code>--include-tags</code>)</li> </ul> <p>To check the exact command, visit the help page (<code>--help</code>).</p>"},{"location":"additional_features/filters.html#limitations","title":"Limitations","text":"<p>Filtering by notebooks is not possible, because nesting can yield some ambiguities.</p>"},{"location":"additional_features/filters.html#examples","title":"Examples","text":"<pre><code># show the help\njimmy-cli-linux --help\n\n# convert specific notes only\njimmy-cli-linux obsidian_vault/ --format obsidian --include-notes \"Sample note\" \"Second sample note\"\n\n# exclude notes with a tag\njimmy-cli-linux obsidian_vault/ --format obsidian --exclude-notes-with-tags \"ignore this tag\"\n\n# don't convert any tags\njimmy-cli-linux obsidian_vault/ --format obsidian --exclude-tags \"*\"\n</code></pre>"},{"location":"additional_features/miscellaneous.html","title":"Miscellaneous","text":""},{"location":"additional_features/miscellaneous.html#silent-mode","title":"Silent Mode","text":"<p>Can be activated by <code>--no-stdout-log</code>.</p>"},{"location":"additional_features/output_customization.html","title":"Customizing the Output","text":"<p>The output can be customized in the following ways.</p>"},{"location":"additional_features/output_customization.html#front-matter","title":"Front Matter","text":"<p>Include Markdown front matter by <code>--frontmatter</code>. Currently, Joplin and Obsidian compatible front matter (<code>--frontmatter joplin</code> respectively <code>--frontmatter obsidian</code>) can be generated.</p>"},{"location":"additional_features/output_customization.html#output-folder","title":"Output Folder","text":"<p>The output folder can be specified by <code>--output-folder OUTPUT_FOLDER</code>.</p>"},{"location":"additional_features/output_customization.html#resource-location","title":"Resource Location","text":"<p>Resources are stored by default next to the Markdown file. When using <code>--local-resource-folder FOLDER</code>, the resources are stored relative to the Markdown files. For example in an <code>media</code> folder, like in QOwnNotes.</p> <p>When using <code>--global-resource-folder FOLDER</code>, the resources are stored relative to the output folder. This means the resources of all files are stored in the same folder. This folder can be also outside the root folder. Like <code>../assets</code> in Logseq.</p>"},{"location":"additional_features/show_note_tree.html","title":"Show the Note Tree","text":"<p>The note tree in the intermediate format can be shown by <code>--print-tree</code>.</p>"},{"location":"additional_features/show_note_tree.html#examples","title":"Examples","text":"<ol> <li>Simply show the converted note tree:</li> </ol> <pre><code>$ jimmy-cli-linux .cache/arbitrary_folder/arbitrary_folder/ --print-tree\n[09/17/24 17:39:20] INFO     Importing notes from \".cache/arbitrary_folder/arbitrary_folder\"\n                    INFO     Start parsing\n[09/17/24 17:39:21] INFO     Finished parsing: 3 notebooks, 7 notes, 3 resources, 1 note links\nNote Tree\n\u2514\u2500\u2500 \ud83d\udcd8 20240917T153920Z - Jimmy Import\n    \u2514\u2500\u2500 \ud83d\udcd8 arbitrary_folder\n        \u251c\u2500\u2500 \ud83d\udcd6 sample\n        \u2502   \u251c\u2500\u2500 \ud83c\udfb4 test.png\n        \u2502   \u2514\u2500\u2500 \ud83d\udd17 link to second_sample_file\n        \u251c\u2500\u2500 \ud83d\udcd6 plaintext\n        \u251c\u2500\u2500 \ud83d\udcd6 test\n        \u251c\u2500\u2500 \ud83d\udcd6 Big-Fish\n        \u2514\u2500\u2500 \ud83d\udcd8 nested_arbitrary_folder\n            \u251c\u2500\u2500 \ud83d\udcd6 LibreOffice Writer\n            \u2502   \u2514\u2500\u2500 \ud83c\udfb4 1000000100000B5F00000449B7E060775BACC2F0.png\n            \u251c\u2500\u2500 \ud83d\udcd6 asciidoc\n            \u2502   \u2514\u2500\u2500 \ud83c\udfb4 test\\_image\n            \u2514\u2500\u2500 \ud83d\udcd6 second_sample_file\n                    INFO     Start filtering\n                    INFO     Finished filtering: 3 notebooks, 7 notes, 3 resources, 1 note links\n                    INFO     Start writing to file system\n                    INFO     Converted notes successfully to Markdown. Please verify that everything was converted correctly.\n                    INFO     Feel free to open an issue on Github, write a message at the Joplin forum or an email.\n\nNotebooks  100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:00&lt;00:00]\nNotes      100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 7/7 [00:00&lt;00:00]\nResources  100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:00&lt;00:00]\nNote Links 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00]\n</code></pre> <ol> <li>Verify that the tags are really excluded:</li> </ol> <pre><code>$ jimmy-cli-linux .cache/obsidian/obsidian_vault --format obsidian --exclude-tags \"*\" --print-tree\n[09/17/24 17:42:14] INFO     Importing notes from \".cache/obsidian/obsidian_vault\"\n                    INFO     Start parsing\n                    INFO     Finished parsing: 2 notebooks, 2 notes, 3 resources, 4 tags, 4 note links\nNote Tree\n\u2514\u2500\u2500 \ud83d\udcd8 20240917T154214Z - Jimmy Import\n    \u251c\u2500\u2500 \ud83d\udcd6 Sample note\n    \u2502   \u251c\u2500\u2500 \ud83c\udfb4 markdown image\n    \u2502   \u251c\u2500\u2500 \ud83d\udd16 inline-tag-obsidian\n    \u2502   \u251c\u2500\u2500 \ud83d\udd16 frontmatter-tag-obsidian\n    \u2502   \u251c\u2500\u2500 \ud83d\udd16 another-tag-obsidian\n    \u2502   \u251c\u2500\u2500 \ud83d\udd17 alias\n    \u2502   \u2514\u2500\u2500 \ud83d\udd17 internal link markdown syntax\n    \u2514\u2500\u2500 \ud83d\udcd8 folder\n        \u2514\u2500\u2500 \ud83d\udcd6 Second sample note\n            \u251c\u2500\u2500 \ud83c\udfb4 test.png\n            \u251c\u2500\u2500 \ud83c\udfb4 plaintext.txt\n            \u251c\u2500\u2500 \ud83d\udd16 inline-tag-obsidian\n            \u251c\u2500\u2500 \ud83d\udd17 Sample note\n            \u2514\u2500\u2500 \ud83d\udd17 Sample note alias\n                    INFO     Start filtering\n                    INFO     Finished filtering: 2 notebooks, 2 notes, 3 resources, 4 tags, 4 note links\nNote Tree Filtered\n\u2514\u2500\u2500 \ud83d\udcd8 20240917T154214Z - Jimmy Import\n    \u251c\u2500\u2500 \ud83d\udcd6 Sample note\n    \u2502   \u251c\u2500\u2500 \ud83c\udfb4 markdown image\n    \u2502   \u251c\u2500\u2500 \ud83d\udd17 alias\n    \u2502   \u2514\u2500\u2500 \ud83d\udd17 internal link markdown syntax\n    \u2514\u2500\u2500 \ud83d\udcd8 folder\n        \u2514\u2500\u2500 \ud83d\udcd6 Second sample note\n            \u251c\u2500\u2500 \ud83c\udfb4 test.png\n            \u251c\u2500\u2500 \ud83c\udfb4 plaintext.txt\n            \u251c\u2500\u2500 \ud83d\udd17 Sample note\n            \u2514\u2500\u2500 \ud83d\udd17 Sample note alias\n                    INFO     Start writing to file system\n                    INFO     Converted notes successfully to Markdown. Please verify that everything was converted correctly.\n                    INFO     Feel free to open an issue on Github, write a message at the Joplin forum or an email.\n\nNotebooks  100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:00&lt;00:00]\nNotes      100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:00&lt;00:00]\nResources  100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:00&lt;00:00]\nNote Links 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4/4 [00:00&lt;00:00]\n</code></pre>"},{"location":"additional_features/templates.html","title":"Templates","text":"<p>Templates can be used to customize notes. You can specify a template by <code>--template-file my_template.txt</code>.</p> <p>Warning</p> <p>This feature is experimental and may break at any time.</p>"},{"location":"additional_features/templates.html#examples","title":"Examples","text":""},{"location":"additional_features/templates.html#add-the-note-title-as-heading-1-on-top-of-the-note","title":"Add the note title as heading 1 on top of the note","text":"<p>Template:</p> <pre><code># {title}\n\n{body}\n</code></pre>"},{"location":"additional_features/templates.html#define-custom-front-matter","title":"Define custom front matter","text":"<p>Template:</p> <pre><code>---\ntitle: {title}\nauthor: {author}\nlatitude: {latitude:.3f}\nlongitude: {longitude:.0f}\naltitude: {altitude}\ncreated: {created:%Y-%m-%dT%H:%M:%SZ}\nupdated: {updated:%Y-%m-%dT%H:%M:%SZ}\ntags: {tags}\nresources: {resources}\nnote_links: {note_links}\n---\n\n{body}\n</code></pre>"},{"location":"additional_features/templates.html#define-an-overview-table","title":"Define an overview table","text":"<p>Template:</p> <pre><code>|         |                              |\n| ------- | ---------------------------- |\n| From    | {author}                     |\n| Title   | {title}                      |\n| Date    | {created:%Y-%m-%dT%H:%M:%SZ} |\n\n---\n\n{body}\n</code></pre>"},{"location":"contributing/contributing.html","title":"How to Contribute?","text":""},{"location":"contributing/contributing.html#contact","title":"Contact","text":"<ul> <li>General discussion at the<ul> <li>Joplin forum</li> <li>Obsidian Forum</li> </ul> </li> <li>Report a bug or request a new feature at GitHub</li> </ul>"},{"location":"contributing/contributing.html#as-non-programmer","title":"As non-programmer","text":"<ul> <li>You can help the project by providing an export file. This helps to identify and fix issues.</li> <li>Add documentation or fix spelling mistakes</li> <li>Test the app</li> <li>Write in forums of your note application if Jimmy works for you</li> </ul>"},{"location":"contributing/contributing.html#how-to-add-a-new-format","title":"How to add a new format?","text":"<p>Here is a good example commit.</p> <p>The brief workflow is:</p> <ol> <li>Discuss the format at the forum or GitHub</li> <li>Implement at src/</li> <li>Provide an example file and add a test</li> <li>Lint with lint.sh</li> <li>Document at docs/</li> </ol>"},{"location":"contributing/development_considerations.html","title":"Development Considerations","text":""},{"location":"contributing/development_considerations.html#why-markdown","title":"Why Markdown?","text":"<p>To provide a flexible base for migrating your notes to the app of your choice.</p>"},{"location":"contributing/development_considerations.html#sort-all-iterators-with-arbitrary-order","title":"Sort all iterators with arbitrary order","text":"<p>Reproducibility is more important than memory usage and speed.</p> <pre><code># good\nfor item in sorted(file_or_folder.iterdir()):\n\n# bad\nfor item in file_or_folder.iterdir():\n</code></pre>"},{"location":"contributing/development_considerations.html#why-pyinstaller-and-not-nuitka","title":"Why pyinstaller and not nuitka?","text":"<p>I did have a bit of experience in setting up pyinstaller. The size of the final executable seems to be much smaller with pyinstaller, too.</p>"},{"location":"contributing/development_considerations.html#why-is-the-executable-so-large","title":"Why is the executable so large?","text":"<p>Pandoc is included and is standalone ~144 MB large. This has the biggest impact on the size. The module sizes in particular can be analyzed by using the following code snippet in the pyinstaller spec file:</p> <pre><code>coll = COLLECT(\n    exe,\n    a.binaries,\n    a.datas,\n    strip=False,\n    upx=True,\n    upx_exclude=[],\n    name='jimmy_cli',\n)\n</code></pre> <p>The resulting files can be listed and ordered by size by:</p> <pre><code>$ du -lh --max-depth=2 dist/jimmy_cli | sort -h\n12K     dist/jimmy_cli/_internal/src\n24K     dist/jimmy_cli/_internal/wheel-0.44.0.dist-info\n40K     dist/jimmy_cli/_internal/Markdown-3.7.dist-info\n44K     dist/jimmy_cli/_internal/anyblock_exporter\n60K     dist/jimmy_cli/_internal/cryptography-43.0.3.dist-info\n60K     dist/jimmy_cli/_internal/setuptools\n108K    dist/jimmy_cli/_internal/ossl-modules\n164K    dist/jimmy_cli/_internal/puremagic\n296K    dist/jimmy_cli/_internal/charset_normalizer\n2,4M    dist/jimmy_cli/_internal/yaml\n11M     dist/jimmy_cli/_internal/cryptography\n15M     dist/jimmy_cli/_internal/lib-dynload\n144M    dist/jimmy_cli/_internal/pypandoc\n213M    dist/jimmy_cli/_internal\n262M    dist/jimmy_cli\n</code></pre>"},{"location":"contributing/development_considerations.html#why-cryptography-and-not-pycryptodome","title":"Why cryptography and not pycryptodome?","text":"<p>They worked both at the first implementation. <code>cryptography</code> made a slightly better impression, so it was chosen.</p>"},{"location":"contributing/development_considerations.html#format-conversion-paths","title":"Format Conversion Paths","text":"<pre><code>graph TD;\n    File -- Plain Formats (plaintext,markdown) --&gt; Markdown;\n\n    File -- Pandoc Unsupported Formats (anytype,colornote,tid,zim,zkn3 bbcode) --&gt; pandoc_unsupported[Pyparsing / External Lib];\n    pandoc_unsupported --&gt; Markdown;\n\n    %% pandoc paths\n    File -- HTML --&gt; Beautifulsoup;\n    Beautifulsoup -- Preprocessed HTML String --&gt; Pandoc;\n    File -- Pandoc Supported Formats --&gt; Pandoc;\n    File -- Encapsulated Pandoc Supported Formats (EML,ENEX,Notion,Zoho) --&gt; note_extraction[Extract Note];\n    note_extraction -- Pandoc Supported Formats --&gt; Pandoc;\n    Pandoc --&gt; Markdown;</code></pre>"},{"location":"contributing/development_considerations.html#intermediate-format","title":"Intermediate Format","text":"<ul> <li>HTML:<ul> <li>Easily modifiable by beautifulsoup and others.</li> <li>Supports wide range of elements that can be \"reduced\" to Markdown.</li> <li>No additional dependency (beautifulsoup is used already).</li> </ul> </li> <li>Pandoc AST:<ul> <li>Python: Panflute and pandocfilters aren't up-to-date (problems with tables especially).</li> <li>Lua: Learning curve, second scripting language in this repo.</li> <li>General: Some filters need some preprocessing (in HTML), like iframes.</li> </ul> </li> </ul>"},{"location":"contributing/get_sample_data.html","title":"How to get sample data?","text":"<p>Documentation how to get sample data from \"difficult\" apps and OS. Difficult means everything else than Web or Linux.</p>"},{"location":"contributing/get_sample_data.html#note-apps","title":"Note Apps","text":""},{"location":"contributing/get_sample_data.html#fusebasenimbus-note","title":"FuseBase/Nimbus Note","text":"<p>From https://nimbusweb.me/guides/settings/account-management-how-to-backup-and-export-your-data/:</p> <p>Server backups are available only with Plus or Ultimate plans.</p> <p>Server backups contain the whole workspace. At least single page exports are possible. </p>"},{"location":"contributing/get_sample_data.html#samsung-notes","title":"Samsung Notes","text":"<p>Inside a Windows VM:</p> <ol> <li>Install Samsung Notes</li> <li>Launch Samsung Notes by executing this script. The script does the following steps:<ol> <li>Set <code>HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\BIOS\\SystemProductName</code> to <code>NP960XFG-KC4UK</code></li> <li>Set <code>HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\BIOS\\SystemManufacturer</code> to <code>Samsung</code></li> <li>Start Samsung Notes</li> <li>Restore the original registry values</li> </ol> </li> </ol>"},{"location":"contributing/get_sample_data.html#synology-note-station","title":"Synology Note Station","text":"<ol> <li>Go to the demo page and press the \"Test\" button</li> <li>Open Note Station by Apps \u2192 Note Station on the top left</li> <li>Files can be transferred through the file system</li> </ol>"},{"location":"contributing/get_sample_data.html#turtl","title":"Turtl","text":"<ul> <li>Linux app crashes always</li> <li>Android app still works</li> </ul>"},{"location":"contributing/get_sample_data.html#wikimedia","title":"Wikimedia","text":"<p>Export at https://de.wikipedia.org/wiki/Spezial:Exportieren.</p>"},{"location":"contributing/get_sample_data.html#virtual-machines","title":"Virtual Machines","text":""},{"location":"contributing/get_sample_data.html#macos","title":"macOS","text":"<p>Note</p> <p>The latest working macOS for VirtualBox is macOS 12 Monterey. See https://forums.virtualbox.org/viewtopic.php?p=552625#p552625. Newer versions lead to a boot cycle.</p> <p>Setup a macOS 12 Monterey VM according to this guide.</p> <p>Troubleshooting:</p> <ul> <li>Commands after creating, but before starting the VM:</li> </ul> <pre><code>vboxmanage modifyvm \"macos_12_monterey\" --cpuid-set 00000001 000106e5 00100800 0098e3fd bfebfbff\nvboxmanage setextradata \"macos_12_monterey\" \"VBoxInternal/Devices/efi/0/Config/DmiSystemProduct\" \"MacBookPro15,1\"\nvboxmanage setextradata \"macos_12_monterey\" \"VBoxInternal/Devices/efi/0/Config/DmiSystemVersion\" \"1.0\"\nvboxmanage setextradata \"macos_12_monterey\" \"VBoxInternal/Devices/efi/0/Config/DmiBoardProduct\" \"Mac-551B86E5744E2388\"\nvboxmanage setextradata \"macos_12_monterey\" \"VBoxInternal/Devices/smc/0/Config/DeviceKey\" \"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc\"\nvboxmanage setextradata \"macos_12_monterey\" \"VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC\" 1\nvboxmanage setextradata \"macos_12_monterey\" \"VBoxInternal/TM/TSCMode\" \"RealTSCOffset\"\nvboxmanage modifyvm \"macos_12_monterey\" --cpu-profile \"Intel Core i7-6700K\"\n</code></pre> <ul> <li><code>LOG:EXITBS:START</code> error: Specify CPU profile</li> <li>Mouse and keyboard not detected: Use USB 3.0</li> <li>No disk available at setup: Create disk with \"Disk Utility\"</li> </ul>"},{"location":"contributing/get_sample_data.html#windows","title":"Windows","text":"<p>Setup a Windows 11 VM according to this guide.</p>"},{"location":"contributing/more_note_apps.html","title":"More Note Apps","text":"<p>Loose collection of note apps/messengers/wikis/formats that could be implemented. For concrete implementations and discussions, a github issue should be used.</p> App/Format Backup/Export Remarks Affine doc Agenda doc apple only Apple Notes script apple only Appflowy seems to be not possible yet Asana doc Beaver Notes doc \u2192 each block is exported separately in json BoostNote - example file 1 - example file 2 (cson) dead? Calibre - doc - script Capacities doc CintaNotes doc (text export) Confluence - doc - script Clickup - doc - script project management Craft - doc - script Cryptee Diaro - doc - script Didthis DokuWiki doc Dropbox Paper doc (Markdown) Endnote Fellow doc (json) FSNotes apple only Ghostwriter Goodnotes doc (goodnotes, PDF, image) one-week trial Heptabase - doc (Markdown) - script iaWriter doc (Markdown) two-week trial Inkdrop 30-day trial Journalify Google or Facebook account needed Journey.cloud script demo keynote-nf https://github.com/marph91/jimmy/issues/3 Laverna dead Lifeograph doc Linked Logseq - doc - doc (json) script Marknote flatpak only massCode - doc - script snap only Manuskript - doc - doc Mem.ai - doc - script memos doc export incomplete Milanote doc Miro doc Monday doc MyInfo doc 30-day trial, windows only Nixnote/Nixnote 2 - doc - thread dead Notable notes stored as Markdown in folder Notebooks doc Notejoy doc (paid only and to Google Drive only) NotePlan doc one-week trial Notesnook - unzip code - Basic plan can only export to text - No attachments without login notezilla doc (csv) How are nested memoboards/notebooks handled? Nuclino doc OmniFocus apple only, one-week trial Omni Notes mobile only Onenote script PDF (OCR) app (many dependencies) Primenote QNAP Notes Station demo raindrop.io - doc - script Reflect doc (Markdown or json?) Remnote - doc - script - example file Reor Rightnote 30-day trial Scrivener - doc - thread 30-day trial Signal https://github.com/marph91/jimmy/issues/8 Siyuan doc Skiff Pages Has joined Notion Slite doc (Markdown, paid only) Stickies https://github.com/marph91/jimmy/issues/4 Supernotes doc Tana thread Takenote Export via settings to zipped md and json No tags/metadata? Taskade doc TheBrain - thread - script Things Treepad thread dead Trello doc (json) Trilium thread (Markdown?) Twos export (markdown, only single notes?) Ulysses thread (Markdown) apple only UpNote doc (Markdown, paid only) Vnote doc (Markdown?) Wenote mobile only Wiznote script Workflowy doc (unusable?) Wunderlist script dead Xiaomi Notes - account needed - export possible? XWiki doc Zotero doc"},{"location":"formats/anki.html","title":"Convert from Anki to Markdown","text":""},{"location":"formats/anki.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.apkg</code></li> </ul>"},{"location":"formats/anki.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"Deck (.apkg)\"</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux MEILLEUR_DECK_ANGLAIS_3000.apkg --format anki</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/anki.html#import-structure","title":"Import Structure","text":"<ul> <li>Decks are converted to folders.</li> <li>Cards are converted to Markdown files. The content is the \"answer\" data.</li> <li>Referenced resources (audio, images and other files) are converted.</li> </ul> <p>A converted page looks like:</p> <p></p>"},{"location":"formats/anki.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Nested decks are not tested and most likely not working.</li> <li>HTML formatting is lost. It's too complex to cover all HTML templates properly.</li> </ul>"},{"location":"formats/anytype.html","title":"Convert from Anytype to Markdown","text":""},{"location":"formats/anytype.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code> or folder</li> </ul>"},{"location":"formats/anytype.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"Any-Block\"</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux Anytype.20241112.175339.64 --format anytype</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/anytype.html#acknowledgements","title":"Acknowledgements","text":"<p>The converter is based on https://github.com/jfcostello/AnyBlock-To-Markdown. Thanks for developing it!</p>"},{"location":"formats/anytype.html#known-limitations","title":"Known Limitations","text":"<p>Images and attachments aren't converted.</p>"},{"location":"formats/bear.html","title":"Convert from Bear to Markdown","text":""},{"location":"formats/bear.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.bear2bk</code></li> </ul>"},{"location":"formats/bear.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux backup.bear2bk --format bear</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/cacher.html","title":"Convert from Cacher to Markdown","text":""},{"location":"formats/cacher.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.json</code></li> </ul>"},{"location":"formats/cacher.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux cacher-export-202406182304.json --format cacher</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/cacher.html#import-structure","title":"Import Structure","text":"<ul> <li>Cacher labels are converted to tags.</li> <li>Cacher snippets are converted to folders.</li> <li>Cacher files are converted to Markdown notes.</li> </ul>"},{"location":"formats/cacher.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Only Markdown files are converted for now.</li> <li>Files attached to snippets are not exported.</li> </ul>"},{"location":"formats/cherrytree.html","title":"Convert from CherryTree to Markdown","text":""},{"location":"formats/cherrytree.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.ctd</code> or folder of <code>.ctd</code> files</li> </ul>"},{"location":"formats/cherrytree.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"Export\" \u2192 \"Export to CherryTreeDocument\" \u2192 \"All the Tree\" \u2192 \"XML, Not Protected (.cdt)\"</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux cherry.ctd --format cherrytree</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/cherrytree.html#import-structure","title":"Import Structure","text":"<ul> <li>CherryTree nodes are converted to Markdown notes.</li> <li>If a CherryTree node contains sub nodes, a folder is created as container. It has the same name as the corresponding note.</li> </ul>"},{"location":"formats/cherrytree.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Cherrytree checked (<code>\u2611</code>) and crossed checkboxes (<code>\u2612</code>) are converted to Markdown checked checkboxes (<code>[x]</code>).</li> <li>Cherrytree latex is converted to a Markdown code block.</li> <li>Some cherrytree elements are not inserted at their original location, but at the end of the note. This is a limitation of cherrytree's export.</li> <li>Cherrytree anchors are not converted.</li> </ul>"},{"location":"formats/clipto.html","title":"Convert from Clipto to Markdown","text":""},{"location":"formats/clipto.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.json</code></li> </ul>"},{"location":"formats/clipto.html#instructions","title":"Instructions","text":"<ol> <li>Export your notes from the mobile app <sup>1</sup><ol> <li>Settings \u2192 Time Machine \u2192 Backup to file</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux clipto_backup_240401_105154.json --format clipto</code></li> <li>Import to your app</li> </ol> <ol> <li> <p>Export works with the mobile app only. See https://github.com/clipto-pro/Desktop/issues/21#issuecomment-537401330.\u00a0\u21a9</p> </li> </ol>"},{"location":"formats/colornote.html","title":"Convert from ColorNote to Markdown","text":""},{"location":"formats/colornote.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.backup</code></li> </ul>"},{"location":"formats/colornote.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux colornote-20241013.backup --format colornote --password 0000</code><ol> <li>The default password for automatic backups is <code>0000</code>.</li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/day_one.html","title":"Convert from Day One to Markdown","text":""},{"location":"formats/day_one.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/day_one.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"Day One JSON (.zip)\"</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux Export-Tagebuch.zip --format day_one</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/day_one.html#import-structure","title":"Import Structure","text":"<ul> <li>Each day is converted to a notebook.</li> <li>Entries are converted to notes and grouped into the corresponding notebook of that day.</li> <li>Referenced Audios, PDF, photos and videos are imported as resources.</li> </ul>"},{"location":"formats/day_one.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Unreferenced photos are not converted.</li> <li>Photos that are references by multiple notes are only imported once (i. e. in one note). This seems to be a bug in the Day One export.</li> </ul>"},{"location":"formats/default.html","title":"Default Conversion to Markdown","text":"<p>This page describes how to convert notes from single files or folders (recursively) to Markdown.</p>"},{"location":"formats/default.html#supported-formats","title":"Supported Formats","text":"<p>The default conversion covers the following formats:</p> <ul> <li>Every format that is supported by Pandoc. Some formats may need some tweaking, though. A few examples:<ul> <li>Comma-separated values (CSV)</li> <li>DocBook</li> <li>DOCX</li> <li>electronic publication (EPUB)</li> <li>HyperText Markup Language (HTML)</li> <li>Jupyter Notebook</li> <li>MediaWiki</li> <li>OpenDocument-Text (ODT)</li> <li>Outline Processor Markup Language (OPML)</li> <li>reStructuredText (RST)</li> <li>Rich Text Format (RTF)</li> <li>txt2tags</li> </ul> </li> <li>AsciiDoc (requires Asciidoctor installed and in path)</li> <li>Email (EML)</li> <li>Fountain:<ul> <li>There is a built-in Joplin plugin that can be activated in the settings.</li> <li>There is a Obsidian plugin.</li> </ul> </li> <li>Markdown (CommonMark)</li> <li>TXT</li> </ul>"},{"location":"formats/default.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Examples: <pre><code># convert a single file supported by pandoc\njimmy-cli-linux libre_office_document.odt\n\n# convert multiple files\njimmy-cli-linux plaintext.txt markdown.md\n\n# convert all files in a folder recursively\njimmy-cli-linux path/to/folder\n</code></pre></li> <li>Import to your app</li> </ol>"},{"location":"formats/default.html#import-structure","title":"Import Structure","text":"<ul> <li>Folders stay folders</li> <li>Files are converted to Markdown notes</li> </ul>"},{"location":"formats/drafts.html","title":"Convert from Drafts to Markdown","text":""},{"location":"formats/drafts.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.draftsExport</code></li> </ul>"},{"location":"formats/drafts.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux DraftsExport.draftsExport --format drafts</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/dynalist.html","title":"Convert from Dynalist to Markdown","text":""},{"location":"formats/dynalist.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/dynalist.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux dynalist-backup-2024-04-12.zip --format dynalist</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/evernote.html","title":"Convert from Evernote to Markdown","text":""},{"location":"formats/evernote.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.enex</code> or folder of <code>.enex</code> files</li> </ul>"},{"location":"formats/evernote.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"enex\"</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux backup.enex --format evernote</code><ol> <li>To decrypt encrypted notes, specify your password, like <code>jimmy-cli-linux backup.enex --format evernote --password 1234</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/evernote.html#import-structure","title":"Import Structure","text":"<ul> <li>Each <code>.enex</code> file is converted to a folder.</li> <li>Notes inside the <code>.enex</code> file are converted to Markdown files.</li> <li>Note links are recovered by matching the note name. This might not work sometimes, if the name was changed after creating the link.</li> </ul>"},{"location":"formats/facebook.html","title":"Convert from Facebook to Markdown","text":""},{"location":"formats/facebook.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/facebook.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose JSON</li> <li>The export may take some time. For a 450 MB file it took two days.</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux facebook-xyz-07.07.2024-m9lv24pS.zip --format facebook</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/facebook.html#import-structure","title":"Import Structure","text":"<ul> <li>Posts and messages are stored in separate notebooks.</li> <li>Each post is converted to a separate note, starting with the creation date (<code>YYYY-MM-DD</code>).</li> <li>Each conversation is a note. Messages are concatenated inside the note and separated by the day. Conversations may be split to prevent too big notes.</li> <li>Referenced resources (audio, gif, photos, videos and other files) are converted.</li> </ul>"},{"location":"formats/facebook.html#known-limitations","title":"Known Limitations","text":"<p>The import was tested with many messages (450 MB, &gt;50000 messages) and only a few posts (~20 posts). The import may be not robust enough yet.</p> <ul> <li>Shared posts are not converted.</li> <li>Profile images, stories and shorts are not converted.</li> <li>Group chats are not converted, since Facebook creates a new file every time a person joins or leaves. It's not possible to merge them by ID.</li> </ul>"},{"location":"formats/google_docs.html","title":"Convert from Google Docs to Markdown","text":""},{"location":"formats/google_docs.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extensions: <code>.zip</code>, <code>.tgz</code></li> </ul>"},{"location":"formats/google_docs.html#instructions","title":"Instructions","text":"<ol> <li>Export via Google Takeout<ol> <li>Select \"Drive\"</li> <li>Select the folders you want to export</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux takeout-20240401T160556Z-001.zip --format google_docs</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/google_keep.html","title":"Convert from Google Keep to Markdown","text":""},{"location":"formats/google_keep.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extensions: <code>.zip</code>, <code>.tgz</code></li> </ul>"},{"location":"formats/google_keep.html#instructions","title":"Instructions","text":"<ol> <li>Export via Takeout as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Examples:<ol> <li><code>jimmy-cli-linux takeout-20240401T160516Z-001.zip --format google_keep</code></li> <li><code>jimmy-cli-linux takeout-20240401T160556Z-001.tgz --format google_keep</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/google_keep.html#import-structure","title":"Import Structure","text":"<ul> <li>Each note is converted to a Markdown file.</li> <li>Links, attachments and tags are preserved. </li> <li>Annotations are appended at the end of a note.</li> </ul>"},{"location":"formats/google_keep.html#known-limitations","title":"Known Limitations","text":"<ul> <li>The indentation level of task lists is not exported from Google Keep.</li> </ul>"},{"location":"formats/joplin.html","title":"Convert from Joplin to Markdown","text":""},{"location":"formats/joplin.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.jex</code></li> </ul>"},{"location":"formats/joplin.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux 29_04_2024.jex --format joplin</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/jrnl.html","title":"Convert from jrnl to Markdown","text":""},{"location":"formats/jrnl.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.json</code></li> </ul>"},{"location":"formats/jrnl.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Export as JSON to preserve metadata.</li> <li>Example: <code>jrnl --format json --file myjournal.json</code></li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux myjournal.json --format jrnl</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/jrnl.html#import-structure","title":"Import Structure","text":"<p>Each journal entry is converted to a separate note in a flat notebook.</p>"},{"location":"formats/nimbus_note.html","title":"Convert from FuseBase to Markdown","text":""},{"location":"formats/nimbus_note.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>FuseBase was formerly called Nimbus Note</li> <li>Typical extension: <code>.zip</code> or folder with <code>.zip</code> files</li> </ul>"},{"location":"formats/nimbus_note.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux nimbus_note/Example/ --format nimbus_note</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/nimbus_note.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Tags aren't included in single page exports.</li> <li>Note links aren't converted.</li> </ul> <p>If you have a backup including tags and note links (premium feature), feel free to share.</p> <p>Note</p> <p>It was possible to export multiple pages at once as JSON or HTML. As of 2025, both options appear to have been removed. It is now only possible to export individual pages. Please ask their support for the reason.</p>"},{"location":"formats/notion.html","title":"Convert from Notion to Markdown","text":""},{"location":"formats/notion.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/notion.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"Markdown and CSV\" and check \"Create folder for sub-pages\" when exporting.</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux 72a2f31c-3a46-4b44-826d-ae046e693551_Export-d609fb9f-43a4-475d-ba88-1db3e9e6bcd2.zip --format notion</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/notion.html#import-structure","title":"Import Structure","text":"<p>Subpages are linked and converted to Markdown files in a subfolder.</p>"},{"location":"formats/obsidian.html","title":"Convert from Obsidian to Markdown","text":""},{"location":"formats/obsidian.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: Folder with <code>.md</code> files</li> </ul>"},{"location":"formats/obsidian.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux obsidian_vault/ --format obsidian</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/qownnotes.html","title":"Convert from QOwnNotes to Markdown","text":""},{"location":"formats/qownnotes.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: Folder with <code>.md</code> files (notes), a <code>media</code> subfolder (containing resources) and a <code>notes.sqlite</code> file (containing tags)</li> </ul>"},{"location":"formats/qownnotes.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux qownnotes_folder/ --format qownnotes</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/qownnotes.html#import-structure","title":"Import Structure","text":"<ul> <li>Markdown style links (<code>[Link to Markdown Cheatsheet](Markdown Cheatsheet.md)</code>) and QOwnNotes style links (<code>&lt;Markdown Cheatsheet.md&gt;</code>) as described here are converted.</li> </ul>"},{"location":"formats/qownnotes.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Encrypted notes aren't converted.</li> </ul>"},{"location":"formats/rednotebook.html","title":"Convert from RedNotebook to Markdown","text":""},{"location":"formats/rednotebook.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code> or data folder with text files</li> </ul>"},{"location":"formats/rednotebook.html#instructions","title":"Instructions","text":"<ol> <li>Create a backup of your notes as described at the website or specify the data folder (for example <code>$HOME/.rednotebook/data</code>)</li> <li>Install Jimmy</li> <li>Convert to Markdown. Examples:<ol> <li><code>jimmy-cli-linux RedNotebook-Backup-2024-09-15.zip --format rednotebook</code></li> <li><code>jimmy-cli-linux ~/.rednotebook/data/ --format rednotebook</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/rednotebook.html#known-limitations","title":"Known Limitations","text":"<p>Images and files are not part of the backup. They will only be included, if the files exist in your file system.</p>"},{"location":"formats/roam_research.html","title":"Convert from Roam Research to Markdown","text":""},{"location":"formats/roam_research.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.json</code></li> </ul>"},{"location":"formats/roam_research.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"Export All\" \u2192 \"JSON\"</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example <code>jimmy-cli-linux export.edn --format roam_research</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/roam_research.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Block links are converted to page links.</li> <li>Embedded pages and blocks are converted to links.</li> </ul>"},{"location":"formats/samsung_notes.html","title":"Convert from Samsung Notes to Markdown","text":""},{"location":"formats/samsung_notes.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extensions: Folder with <code>.docx</code> files</li> </ul> <p>Note</p> <p>These instructions don't work with <code>.snb</code> files from the old S-Note app. You might try this script instead.</p>"},{"location":"formats/samsung_notes.html#instructions","title":"Instructions","text":"<ol> <li>Select the notes to export and choose \"Save as file \u2192 Microsoft Word file\"</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux export/folder/</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/samsung_notes.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Tags and folder hierarchy are not preserved. The information is lost when exporting from Samsung Notes already.</li> <li>Attachments are not preserved.</li> <li>Most of the markup is not preserved.</li> </ul>"},{"location":"formats/simplenote.html","title":"Convert from Simplenote to Markdown","text":""},{"location":"formats/simplenote.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/simplenote.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux notes.zip --format simplenote</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/standard_notes.html","title":"Convert from Standard Notes to Markdown","text":""},{"location":"formats/standard_notes.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/standard_notes.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux \"Standard Notes Backup - Sun Apr 28 2024 12_56_55 GMT+0200.zip\" --format standard_notes</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/standard_notes.html#import-structure","title":"Import Structure","text":"<p>Notes in \"Super\" format are converted to Markdown. Other notes are taken as-is.</p>"},{"location":"formats/standard_notes.html#known-limitations","title":"Known Limitations","text":"<p>Note links, attachments and folders are not implemented yet, since they require a subscription.</p>"},{"location":"formats/synology_note_station.html","title":"Convert from Synology Note Station to Markdown","text":""},{"location":"formats/synology_note_station.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.nsx</code></li> </ul>"},{"location":"formats/synology_note_station.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux notestation-test-books.nsx --format synology_note_station</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/synology_note_station.html#known-limitations","title":"Known Limitations","text":"<p>Inline charts are not converted.</p>"},{"location":"formats/telegram.html","title":"Convert from Telegram to Markdown","text":""},{"location":"formats/telegram.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: folder with media files and <code>result.json</code> file</li> </ul>"},{"location":"formats/telegram.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux DataExport_2025-03-24/ --format telegram</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/textbundle.html","title":"Convert from Textbundle to Markdown","text":""},{"location":"formats/textbundle.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extensions: <code>.textbundle</code>, <code>.textpack</code> or folder of <code>.textbundle</code> and <code>.textpack</code></li> </ul>"},{"location":"formats/textbundle.html#apps-that-support-textbundle-export","title":"Apps that support Textbundle export","text":"<p>Selection from the textbundle website:</p> <ul> <li>Bear</li> <li>Craft</li> <li>Ulysses</li> <li>WordPress</li> <li>Zettlr</li> </ul>"},{"location":"formats/textbundle.html#instructions","title":"Instructions","text":"<ol> <li>Export from any of the mentioned apps</li> <li>Install Jimmy</li> <li>Convert to Markdown. Examples:<ol> <li><code>jimmy-cli-linux \"Textbundle Example v1.textbundle/\" --format textbundle</code></li> <li><code>jimmy-cli-linux \"example.textpack\" --format textbundle</code></li> <li><code>jimmy-cli-linux folder/with/textbundles/ --format textbundle</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/tiddlywiki.html","title":"Convert from TiddlyWiki to Markdown","text":""},{"location":"formats/tiddlywiki.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.json</code>, <code>.tid</code> or folder of <code>.tid</code> files</li> </ul>"},{"location":"formats/tiddlywiki.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Choose \"JSON file\" if you want to export the complete wiki</li> <li>Choose \"TID text file\" if you want to export a single tiddler only. Resources and internal links won't be converted in this case.</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Examples:<ol> <li><code>jimmy-cli-linux tiddlers.json --format tiddlywiki</code></li> <li><code>jimmy-cli-linux tiddlers.tid --format tiddlywiki</code></li> <li><code>jimmy-cli-linux /folder/to/tiddlers --format tiddlywiki</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/tiddlywiki.html#known-limitations","title":"Known Limitations","text":"<p>Note content is in TiddlyWiki's WikiText format. It is converted, but Markdown supports only a subset. For example JavaScript functions won't work in the converted Markdown anymore.</p>"},{"location":"formats/todo.txt.html","title":"Convert from Todo.txt to Markdown","text":""},{"location":"formats/todo.txt.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.txt</code></li> </ul>"},{"location":"formats/todo.txt.html#apps-that-support-todotxt","title":"Apps that support Todo.txt","text":"<ul> <li>The main todo.txt app</li> <li>Other projects</li> </ul>"},{"location":"formats/todo.txt.html#instructions","title":"Instructions","text":"<ol> <li>Export from any of the mentioned apps</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux examples_from_readme.txt --format todo_txt</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/todoist.html","title":"Convert from Todoist to Markdown","text":""},{"location":"formats/todoist.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.csv</code></li> </ul>"},{"location":"formats/todoist.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Uncheck \"Use relative data\" when exporting.</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux Privates.csv --format todoist</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/todoist.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Finished todo's are not exported at all.</li> <li>Subtasks are converted to regular notes. I. e. they lose their indentation.</li> <li>Markdown is not rendered in note titles.</li> </ul>"},{"location":"formats/tomboy_ng.html","title":"Convert from Tomboy-ng to Markdown","text":""},{"location":"formats/tomboy_ng.html#general-information","title":"General Information","text":"<ul> <li>Tomboy-ng Website</li> <li>Gnote Website. Gnote is a port of Tomboy to C++. They use a similar note format.</li> <li>Typical extension: <code>.note</code> file or folder with <code>.note</code> files</li> </ul>"},{"location":"formats/tomboy_ng.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Examples:<ol> <li><code>jimmy-cli-linux ~/.local/share/tomboy-ng/ --format tomboy_ng</code></li> <li><code>jimmy-cli-linux ~/.local/share/gnote --format tomboy_ng</code></li> <li><code>jimmy-cli-linux tomboy-ng/5E74990A-E93E-4A11-AEA2-0814A37FEE1A.note --format tomboy_ng</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/tomboy_ng.html#known-limitations","title":"Known Limitations","text":"<ul> <li>Note links are not exported.</li> <li>Multiple formats are not converted properly.</li> </ul>"},{"location":"formats/toodledo.html","title":"Convert from Toodledo to Markdown","text":""},{"location":"formats/toodledo.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.csv</code></li> </ul>"},{"location":"formats/toodledo.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Uncheck \"Use relative data\" when exporting.</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Examples:<ol> <li><code>jimmy-cli-linux toodledo_completed_240427.csv --format toodledo</code></li> <li><code>jimmy-cli-linux toodledo_current_240427.csv --format toodledo</code></li> <li><code>jimmy-cli-linux toodledo_notebook_240427.csv --format toodledo</code></li> </ol> </li> <li>Import to your app</li> </ol>"},{"location":"formats/toodledo.html#known-limitations","title":"Known Limitations","text":"<p>Subtasks and files are not implemented, since they require a subscription.</p>"},{"location":"formats/turtl.html","title":"Convert from Turtl to Markdown","text":""},{"location":"formats/turtl.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.json</code></li> </ul>"},{"location":"formats/turtl.html#instructions","title":"Instructions","text":"<ol> <li>Export as shown at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux turtl-backup.json --format turtl</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/turtl.html#import-structure","title":"Import Structure","text":"<ul> <li>Spaces are converted to folders.</li> <li>Boards are converted to subfolders of the corresponding space.</li> <li>Notes are converted to Markdown files in the corresponding board.</li> <li>Tags and files are converted.</li> </ul>"},{"location":"formats/wordpress.html","title":"Convert from WordPress to Markdown","text":""},{"location":"formats/wordpress.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.xml</code></li> </ul>"},{"location":"formats/wordpress.html#instructions","title":"Instructions","text":"<ol> <li>Export as shown at the website</li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux mywordpresswebsite.WordPress.2024-12-17.xml --format wordpress</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/xit.html","title":"Xit","text":""},{"location":"formats/xit.html#source_app-xit","title":"source_app: [x]it!","text":""},{"location":"formats/xit.html#convert-from-xit-to-markdown","title":"Convert from [x]it! to Markdown","text":""},{"location":"formats/xit.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.xit</code></li> </ul>"},{"location":"formats/xit.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux example.xit --format xit</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/xit.html#import-structure","title":"Import Structure","text":"<ul> <li>xit groups are converted to folders</li> <li>xit items are converted to Markdown todos</li> <li>Priority, tags and due dates are converted to metadata and removed from the todo title</li> </ul>"},{"location":"formats/zettelkasten.html","title":"Convert from Zettelkasten to Markdown","text":""},{"location":"formats/zettelkasten.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zkn3</code></li> </ul>"},{"location":"formats/zettelkasten.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux test_zettelkasten.zkn3 --format zettelkasten</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/zettelkasten.html#import-structure","title":"Import Structure","text":"<p>Zettelkasten supports Markdown export. However, it doesn't convert everything and the note links and attachments get lost. Most data can be preserved, when using the original <code>.zkn3</code> location in the file system without any export.</p> <ul> <li>Each zettel is converted to a separate note.</li> <li>The note body of Zettelkasten is converted from BBCode to Markdown.</li> <li>Resources and attachments are converted, if the original folders are next to the <code>.zkn3</code> file. I. e. <code>img</code> for images and <code>attachments</code> for attachments.</li> <li>Note sequences (Folgezettel) are linked at the end of the note.</li> </ul>"},{"location":"formats/zettelkasten.html#known-limitations","title":"Known Limitations","text":"<p>Some formatting is not converted, because it can't be expressed in pure Markdown (e. g. alignment).</p>"},{"location":"formats/zim.html","title":"Convert from Zim Wiki to Markdown","text":""},{"location":"formats/zim.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: Folder with <code>.txt</code> files</li> </ul>"},{"location":"formats/zim.html#instructions","title":"Instructions","text":"<ol> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux zim/folder --format zim</code></li> <li>Import to your app</li> </ol>"},{"location":"formats/zim.html#import-structure","title":"Import Structure","text":"<p>Zim does a good job in exporting to Markdown. If the built-in export is fine for you, you don't need to use Jimmy.</p> <p>Jimmy doesn't use Pandoc for conversion and applies some additional tweaks:</p> <ul> <li>Consistently use ATX style headings (starting with <code>#</code>).</li> <li>Consistently use spaces instead of tabs.</li> <li>Page title and creation date are removed from the note body. They are instead stored in the metadata respectively the filename. The metadata can be included by a front matter.</li> <li>Convert Zim checklists to Markdown checklists (<code>- [ ]</code>) instead of Markdown lists with signs (<code>- \u2610</code>). The checklist states are converted as described below:<ul> <li>Done and not done are converted to <code>- [x]</code>.</li> <li>All other states are converted to <code>-[ ]</code>.</li> </ul> </li> </ul>"},{"location":"formats/zoho_notebook.html","title":"Convert from Zoho Notebook to Markdown","text":""},{"location":"formats/zoho_notebook.html#general-information","title":"General Information","text":"<ul> <li>Website</li> <li>Typical extension: <code>.zip</code></li> </ul>"},{"location":"formats/zoho_notebook.html#instructions","title":"Instructions","text":"<ol> <li>Export as described at the website<ol> <li>Export as HTML</li> </ol> </li> <li>Install Jimmy</li> <li>Convert to Markdown. Example: <code>jimmy-cli-linux Notebook_14Apr2024_1300_html.zip --format zoho_notebook</code></li> <li>Import to your app</li> </ol>"}]}